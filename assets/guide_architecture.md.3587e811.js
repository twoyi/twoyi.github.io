import{_ as e,c as t,o as i,a as n}from"./app.b7fe8946.js";const g='{"title":"System Architecture","description":"","frontmatter":{"sidebarDepth":2},"headers":[{"level":2,"title":"Architecture Overview","slug":"architecture-overview"},{"level":3,"title":"Architecture Diagram","slug":"architecture-diagram"},{"level":2,"title":"Core Components","slug":"core-components"},{"level":3,"title":"1. Render Engine","slug":"_1-render-engine"},{"level":3,"title":"2. ROM Management","slug":"_2-rom-management"},{"level":3,"title":"3. Inter-Process Communication","slug":"_3-inter-process-communication"},{"level":3,"title":"4. Virtual Hardware Abstraction Layer (HAL)","slug":"_4-virtual-hardware-abstraction-layer-hal"},{"level":2,"title":"Boot Process","slug":"boot-process"},{"level":2,"title":"Application Management","slug":"application-management"},{"level":2,"title":"Security Model","slug":"security-model"},{"level":2,"title":"Future Architecture Plans","slug":"future-architecture-plans"}],"relativePath":"guide/architecture.md","lastUpdated":1746534938332}',r={},a=n(`<h1 id="system-architecture" tabindex="-1">System Architecture <a class="header-anchor" href="#system-architecture" aria-hidden="true">#</a></h1><p>Twoyi implements a sophisticated architecture that enables running a complete Android environment within a standard application. This page explains the technical details of how Twoyi works.</p><h2 id="architecture-overview" tabindex="-1">Architecture Overview <a class="header-anchor" href="#architecture-overview" aria-hidden="true">#</a></h2><p>Twoyi&#39;s architecture consists of three main layers:</p><ol><li><strong>Host Android System</strong>: The user&#39;s actual Android device</li><li><strong>Container Application</strong>: The Twoyi app that manages the virtualized environment</li><li><strong>Virtualized Android Environment</strong>: The internal Android 8.1 system that runs inside Twoyi</li></ol><h3 id="architecture-diagram" tabindex="-1">Architecture Diagram <a class="header-anchor" href="#architecture-diagram" aria-hidden="true">#</a></h3><div class="language-"><pre><code>\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
\u2502                Host Android System                  \u2502
\u2502                                                     \u2502
\u2502  \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502
\u2502  \u2502            Twoyi Container App              \u2502   \u2502
\u2502  \u2502                                             \u2502   \u2502
\u2502  \u2502  \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510   \u2502   \u2502
\u2502  \u2502  \u2502   Virtualized Android Environment   \u2502   \u2502   \u2502
\u2502  \u2502  \u2502   (Android 8.1)                     \u2502   \u2502   \u2502
\u2502  \u2502  \u2502                                     \u2502   \u2502   \u2502
\u2502  \u2502  \u2502   \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510  \u2502   \u2502   \u2502
\u2502  \u2502  \u2502   \u2502 System  \u2502  \u2502 User Apps      \u2502  \u2502   \u2502   \u2502
\u2502  \u2502  \u2502   \u2502 Services\u2502  \u2502 &amp; Components   \u2502  \u2502   \u2502   \u2502
\u2502  \u2502  \u2502   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  \u2502   \u2502   \u2502
\u2502  \u2502  \u2502                                     \u2502   \u2502   \u2502
\u2502  \u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502   \u2502
\u2502  \u2502                                             \u2502   \u2502
\u2502  \u2502      \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510    \u2502   \u2502
\u2502  \u2502      \u2502 Renderer  \u2502    \u2502 File Manager  \u2502    \u2502   \u2502
\u2502  \u2502      \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518    \u2502   \u2502
\u2502  \u2502                                             \u2502   \u2502
\u2502  \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502
\u2502                                                     \u2502
\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518
</code></pre></div><h2 id="core-components" tabindex="-1">Core Components <a class="header-anchor" href="#core-components" aria-hidden="true">#</a></h2><h3 id="_1-render-engine" tabindex="-1">1. Render Engine <a class="header-anchor" href="#_1-render-engine" aria-hidden="true">#</a></h3><p>The Render Engine is responsible for displaying the virtualized Android environment&#39;s UI within the Twoyi app. It consists of:</p><ul><li><strong>Render2Activity</strong>: The central UI component that manages the rendering of the container&#39;s interface</li><li><strong>Native Renderer</strong>: Performance-critical rendering implemented in Rust for efficiency</li><li><strong>UI Helpers</strong>: Components that handle user interactions and input forwarding</li></ul><p>The rendering engine translates the virtual display of the internal Android system to the host device&#39;s screen, handling touch events, keyboard input, and other interactions.</p><h3 id="_2-rom-management" tabindex="-1">2. ROM Management <a class="header-anchor" href="#_2-rom-management" aria-hidden="true">#</a></h3><p>The ROM Management system handles the extraction, verification, and initialization of the container&#39;s Android system:</p><ul><li><strong>ROM Extraction</strong>: Unpacks the embedded or custom ROM files to the appropriate location</li><li><strong>Verification</strong>: Ensures the integrity of the ROM files</li><li><strong>Initialization</strong>: Sets up the necessary file structure and permissions</li></ul><p>Twoyi supports both the built-in ROM (Android 8.1) and custom ROMs that users can create or modify.</p><h3 id="_3-inter-process-communication" tabindex="-1">3. Inter-Process Communication <a class="header-anchor" href="#_3-inter-process-communication" aria-hidden="true">#</a></h3><p>Twoyi uses a sophisticated IPC (Inter-Process Communication) system to facilitate communication between:</p><ul><li>The host app and container environment</li><li>Components within the container</li><li>Virtual hardware components and their clients</li></ul><p>The IPC system primarily uses socket-based communication for efficiency and reliability.</p><h3 id="_4-virtual-hardware-abstraction-layer-hal" tabindex="-1">4. Virtual Hardware Abstraction Layer (HAL) <a class="header-anchor" href="#_4-virtual-hardware-abstraction-layer-hal" aria-hidden="true">#</a></h3><p>One of Twoyi&#39;s most powerful features is its ability to virtualize hardware components:</p><ul><li><strong>Virtual Camera</strong>: Allows applications to access a virtual camera feed</li><li><strong>Virtual Sensors</strong>: Provides simulated sensor data (accelerometer, gyroscope, etc.)</li><li><strong>Virtual GPS</strong>: Enables location spoofing for applications within the container</li></ul><p>The virtual HAL layer intercepts hardware access requests from applications and redirects them to the virtualized components.</p><h2 id="boot-process" tabindex="-1">Boot Process <a class="header-anchor" href="#boot-process" aria-hidden="true">#</a></h2><p>The Twoyi boot process involves several stages:</p><ol><li><strong>Initialization</strong>: When Twoyi is launched, it checks for the presence of the ROM files</li><li><strong>Extraction</strong> (if needed): On first launch, the ROM files are extracted to the appropriate location</li><li><strong>Environment Setup</strong>: The container environment is prepared with the necessary file structure</li><li><strong>System Boot</strong>: The internal Android system is started</li><li><strong>Service Initialization</strong>: System services within the container are initialized</li><li><strong>UI Rendering</strong>: The container&#39;s display is rendered to the user</li></ol><p>After the initial setup, subsequent launches skip the extraction phase, resulting in a boot time of approximately three seconds.</p><h2 id="application-management" tabindex="-1">Application Management <a class="header-anchor" href="#application-management" aria-hidden="true">#</a></h2><p>Twoyi provides functionality to import and manage applications within the container environment:</p><ul><li><strong>App Import</strong>: Applications can be imported from the host system or from APK files</li><li><strong>Package Management</strong>: Handles installation, updating, and removal of applications</li><li><strong>Runtime Environment</strong>: Provides the necessary environment for applications to run</li></ul><p>The application management system ensures that applications within the container have the appropriate permissions and access to the virtualized system components they need.</p><h2 id="security-model" tabindex="-1">Security Model <a class="header-anchor" href="#security-model" aria-hidden="true">#</a></h2><p>Twoyi implements a security model that balances functionality with isolation:</p><ul><li><strong>Container Isolation</strong>: The virtualized environment is isolated from the host system</li><li><strong>Permission Management</strong>: Applications within the container have their own permission model</li><li><strong>Resource Limitations</strong>: The container has controlled access to system resources</li></ul><p>This security model allows Twoyi to provide advanced functionality (like root access) within the container without compromising the security of the host system.</p><h2 id="future-architecture-plans" tabindex="-1">Future Architecture Plans <a class="header-anchor" href="#future-architecture-plans" aria-hidden="true">#</a></h2><p>The Twoyi team is working on several architectural improvements:</p><ol><li><strong>Android 10 Support</strong>: Adding support for a newer Android version within the container</li><li><strong>Enhanced Performance</strong>: Optimizing the rendering engine for better performance</li><li><strong>Expanded HAL Virtualization</strong>: Adding support for more virtual hardware components</li><li><strong>Improved IPC</strong>: Enhancing the communication between the host and container</li></ol><p>These improvements will further enhance Twoyi&#39;s capabilities while maintaining its lightweight and efficient design.</p>`,40),o=[a];function s(l,c,h,d,p,u){return i(),t("div",null,o)}var f=e(r,[["render",s]]);export{g as __pageData,f as default};
