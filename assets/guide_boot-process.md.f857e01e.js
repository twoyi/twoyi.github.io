import{_ as e,c as t,o as i,a as s}from"./app.fb1780b6.js";const m='{"title":"Boot Process","description":"","frontmatter":{"sidebarDepth":2},"headers":[{"level":2,"title":"Boot Sequence Overview","slug":"boot-sequence-overview"},{"level":2,"title":"Detailed Boot Stages","slug":"detailed-boot-stages"},{"level":3,"title":"Stage 1: Application Initialization","slug":"stage-1-application-initialization"},{"level":3,"title":"Stage 2: ROM Verification","slug":"stage-2-rom-verification"},{"level":3,"title":"Stage 3: Environment Preparation","slug":"stage-3-environment-preparation"},{"level":3,"title":"Stage 4: System Initialization","slug":"stage-4-system-initialization"},{"level":3,"title":"Stage 5: Service Startup","slug":"stage-5-service-startup"},{"level":3,"title":"Stage 6: UI Rendering","slug":"stage-6-ui-rendering"},{"level":2,"title":"Boot Time Optimization","slug":"boot-time-optimization"},{"level":2,"title":"Boot Process Diagram","slug":"boot-process-diagram"},{"level":2,"title":"First Boot vs. Subsequent Boots","slug":"first-boot-vs-subsequent-boots"},{"level":3,"title":"First Boot","slug":"first-boot"},{"level":3,"title":"Subsequent Boots","slug":"subsequent-boots"},{"level":2,"title":"Custom ROM Boot Process","slug":"custom-rom-boot-process"},{"level":2,"title":"Troubleshooting Boot Issues","slug":"troubleshooting-boot-issues"}],"relativePath":"guide/boot-process.md","lastUpdated":1746534938332}',o={},n=s(`<h1 id="boot-process" tabindex="-1">Boot Process <a class="header-anchor" href="#boot-process" aria-hidden="true">#</a></h1><p>This page explains the technical details of Twoyi&#39;s boot process, from application launch to a fully functional Android container.</p><h2 id="boot-sequence-overview" tabindex="-1">Boot Sequence Overview <a class="header-anchor" href="#boot-sequence-overview" aria-hidden="true">#</a></h2><p>Twoyi&#39;s boot process involves several stages that transform a normal Android application into a complete Android container environment:</p><ol><li><strong>Application Initialization</strong>: The Twoyi app starts and initializes its components</li><li><strong>ROM Verification</strong>: The system checks for the presence and integrity of ROM files</li><li><strong>Environment Preparation</strong>: The container environment is set up with the necessary file structure</li><li><strong>System Initialization</strong>: The internal Android system is started</li><li><strong>Service Startup</strong>: System services within the container are initialized</li><li><strong>UI Rendering</strong>: The container&#39;s display is rendered to the user</li></ol><h2 id="detailed-boot-stages" tabindex="-1">Detailed Boot Stages <a class="header-anchor" href="#detailed-boot-stages" aria-hidden="true">#</a></h2><h3 id="stage-1-application-initialization" tabindex="-1">Stage 1: Application Initialization <a class="header-anchor" href="#stage-1-application-initialization" aria-hidden="true">#</a></h3><p>When you launch Twoyi, the following initialization steps occur:</p><ol><li><strong>Activity Creation</strong>: The main activity (<code>MainActivity</code>) is created</li><li><strong>Permission Checking</strong>: The app verifies it has the necessary permissions</li><li><strong>Configuration Loading</strong>: User preferences and settings are loaded</li><li><strong>Component Initialization</strong>: Core components are initialized: <ul><li>Rendering engine</li><li>File system manager</li><li>IPC (Inter-Process Communication) system</li><li>Virtual hardware components</li></ul></li></ol><p>This stage typically takes less than a second to complete.</p><h3 id="stage-2-rom-verification" tabindex="-1">Stage 2: ROM Verification <a class="header-anchor" href="#stage-2-rom-verification" aria-hidden="true">#</a></h3><p>Before booting the internal Android system, Twoyi verifies the ROM files:</p><ol><li><strong>ROM Presence Check</strong>: The system checks if ROM files are already extracted</li><li><strong>First Launch Detection</strong>: If this is the first launch, ROM extraction is needed</li><li><strong>ROM Extraction</strong> (if needed): <ul><li>The built-in ROM is extracted from the APK assets</li><li>Files are written to the appropriate location on storage</li><li>File permissions are set correctly</li></ul></li><li><strong>Integrity Verification</strong>: The extracted files are verified for integrity</li></ol><p>The ROM extraction process only occurs on the first launch or after a factory reset. This is why the first launch takes longer than subsequent launches.</p><h3 id="stage-3-environment-preparation" tabindex="-1">Stage 3: Environment Preparation <a class="header-anchor" href="#stage-3-environment-preparation" aria-hidden="true">#</a></h3><p>Once the ROM files are verified, Twoyi prepares the container environment:</p><ol><li><strong>Directory Structure</strong>: Creates the necessary directory structure for the container</li><li><strong>Mount Points</strong>: Sets up virtual mount points for system directories</li><li><strong>File Permissions</strong>: Configures appropriate permissions for system files</li><li><strong>Configuration Files</strong>: Generates or updates configuration files</li><li><strong>Data Initialization</strong>: Prepares user data directories if they don&#39;t exist</li></ol><p>This stage establishes the foundation for the Android container to run.</p><h3 id="stage-4-system-initialization" tabindex="-1">Stage 4: System Initialization <a class="header-anchor" href="#stage-4-system-initialization" aria-hidden="true">#</a></h3><p>With the environment prepared, Twoyi starts the internal Android system:</p><ol><li><strong>Init Process</strong>: Launches the Android init process</li><li><strong>System Services</strong>: Starts essential system services: <ul><li>ServiceManager</li><li>Zygote (the process that spawns application processes)</li><li>System Server</li></ul></li><li><strong>Property Service</strong>: Initializes the system property service</li><li><strong>Hardware Abstraction Layer</strong>: Initializes the virtual HAL components</li></ol><p>This stage is where the actual Android system within Twoyi comes to life.</p><h3 id="stage-5-service-startup" tabindex="-1">Stage 5: Service Startup <a class="header-anchor" href="#stage-5-service-startup" aria-hidden="true">#</a></h3><p>After the core system is initialized, various Android services are started:</p><ol><li><strong>Core Services</strong>: <ul><li>Activity Manager</li><li>Package Manager</li><li>Window Manager</li><li>Power Manager</li></ul></li><li><strong>System UI</strong>: Initializes the system user interface</li><li><strong>Input Management</strong>: Sets up input handling for touch and keyboard</li><li><strong>Network Services</strong>: Initializes network connectivity</li><li><strong>Application Services</strong>: Prepares the environment for running applications</li></ol><p>These services provide the functionality needed for a complete Android experience.</p><h3 id="stage-6-ui-rendering" tabindex="-1">Stage 6: UI Rendering <a class="header-anchor" href="#stage-6-ui-rendering" aria-hidden="true">#</a></h3><p>The final stage involves rendering the container&#39;s UI to the user:</p><ol><li><strong>Surface Creation</strong>: Creates a rendering surface for the container</li><li><strong>Display Configuration</strong>: Configures the virtual display properties</li><li><strong>Input Routing</strong>: Sets up input event routing from the host to the container</li><li><strong>Launcher Start</strong>: Launches the home screen launcher</li><li><strong>UI Presentation</strong>: Presents the fully booted system to the user</li></ol><p>At this point, the boot process is complete, and the user can interact with the Twoyi container.</p><h2 id="boot-time-optimization" tabindex="-1">Boot Time Optimization <a class="header-anchor" href="#boot-time-optimization" aria-hidden="true">#</a></h2><p>Twoyi is designed for fast boot times, with several optimizations:</p><ol><li><strong>Lazy Loading</strong>: Some components are loaded only when needed</li><li><strong>Cached Data</strong>: Frequently used data is cached for faster access</li><li><strong>Parallel Processing</strong>: Multiple initialization tasks run in parallel</li><li><strong>Optimized ROM</strong>: The internal ROM is optimized for quick startup</li><li><strong>Minimal Services</strong>: Only essential services are started initially</li></ol><p>These optimizations result in a boot time of approximately three seconds after the initial setup.</p><h2 id="boot-process-diagram" tabindex="-1">Boot Process Diagram <a class="header-anchor" href="#boot-process-diagram" aria-hidden="true">#</a></h2><div class="language-"><pre><code>\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
\u2502                     Twoyi Boot Process                          \u2502
\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518
          \u2502
          \u25BC
\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
\u2502 Application Initialization \u2502  &lt; 1 second
\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518
          \u2502
          \u25BC
\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
\u2502    ROM Verification     \u2502  First launch: 1-3 minutes
\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  Subsequent: &lt; 0.5 seconds
          \u2502
          \u25BC
\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
\u2502 Environment Preparation \u2502  ~ 0.5 seconds
\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518
          \u2502
          \u25BC
\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
\u2502   System Initialization  \u2502  ~ 1 second
\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518
          \u2502
          \u25BC
\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
\u2502     Service Startup     \u2502  ~ 1 second
\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518
          \u2502
          \u25BC
\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
\u2502      UI Rendering       \u2502  ~ 0.5 seconds
\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518
          \u2502
          \u25BC
\u250C\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510
\u2502     System Ready        \u2502  Total: ~ 3 seconds
\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518  (after initial setup)
</code></pre></div><h2 id="first-boot-vs-subsequent-boots" tabindex="-1">First Boot vs. Subsequent Boots <a class="header-anchor" href="#first-boot-vs-subsequent-boots" aria-hidden="true">#</a></h2><p>The boot process differs significantly between the first boot and subsequent boots:</p><h3 id="first-boot" tabindex="-1">First Boot <a class="header-anchor" href="#first-boot" aria-hidden="true">#</a></h3><ul><li>ROM extraction is required</li><li>All directories and files need to be created</li><li>System needs to be initialized from scratch</li><li>Can take 1-3 minutes depending on device performance</li></ul><h3 id="subsequent-boots" tabindex="-1">Subsequent Boots <a class="header-anchor" href="#subsequent-boots" aria-hidden="true">#</a></h3><ul><li>ROM files are already extracted</li><li>Directory structure is already in place</li><li>System can start directly</li><li>Takes approximately 3 seconds</li></ul><h2 id="custom-rom-boot-process" tabindex="-1">Custom ROM Boot Process <a class="header-anchor" href="#custom-rom-boot-process" aria-hidden="true">#</a></h2><p>When using a custom ROM, the boot process includes additional steps:</p><ol><li><strong>Custom ROM Verification</strong>: Verifies the integrity of the custom ROM</li><li><strong>Compatibility Check</strong>: Ensures the custom ROM is compatible with Twoyi</li><li><strong>Custom Configuration</strong>: Applies any custom configuration specified by the ROM</li><li><strong>Custom Initialization</strong>: Executes any custom initialization scripts</li></ol><p>These additional steps may slightly increase the boot time when using a custom ROM.</p><h2 id="troubleshooting-boot-issues" tabindex="-1">Troubleshooting Boot Issues <a class="header-anchor" href="#troubleshooting-boot-issues" aria-hidden="true">#</a></h2><p>If Twoyi fails to boot properly, the issue typically occurs in one of the stages described above. Common issues include:</p><ol><li><strong>ROM Extraction Failure</strong>: Insufficient storage space or permission issues</li><li><strong>System Initialization Failure</strong>: Incompatible ROM or corrupted system files</li><li><strong>Service Startup Failure</strong>: Conflicts between services or resource limitations</li><li><strong>Rendering Failure</strong>: Graphics driver issues or incompatible display configuration</li></ol><p>For detailed troubleshooting steps, refer to the <a href="/guide/troubleshooting.html">Troubleshooting</a> guide.</p>`,50),r=[n];function a(l,c,d,h,g,u){return i(),t("div",null,r)}var f=e(o,[["render",a]]);export{m as __pageData,f as default};
