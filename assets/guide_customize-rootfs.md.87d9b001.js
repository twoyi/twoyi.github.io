import{_ as e,a as t}from"./rootfs_folder.255d70c8.js";import{_ as o,c as a,o as i,a as s}from"./app.b7fe8946.js";const _='{"title":"Customizing ROM","description":"","frontmatter":{},"headers":[{"level":2,"title":"Get the original rootfs","slug":"get-the-original-rootfs"},{"level":2,"title":"Edit rootfs","slug":"edit-rootfs"},{"level":2,"title":"Adding rom.ini","slug":"adding-rom-ini"},{"level":2,"title":"Replace ROM in Twoyi","slug":"replace-rom-in-twoyi"}],"relativePath":"guide/customize-rootfs.md","lastUpdated":1746534938333}',r={},n=s('<h1 id="customizing-rom" tabindex="-1">Customizing ROM <a class="header-anchor" href="#customizing-rom" aria-hidden="true">#</a></h1><p>The Twoyi has added the feature to importing custom ROM and boot system in <code>0.5.1</code> version and above, here is the turtoial.</p><p>The ROM is a compressed file in <code>7z</code> format; so you need to download the <code>7z</code> compression tool first; here is the <a href="https://www.7-zip.org/download.html" target="_blank" rel="noopener noreferrer">download address</a></p><h2 id="get-the-original-rootfs" tabindex="-1">Get the original rootfs <a class="header-anchor" href="#get-the-original-rootfs" aria-hidden="true">#</a></h2><p>First we need the original rootfs file, we recommend using the rootfs that comes with the official apk file; you can download the latest apk from the Twoyi <a href="https://twoyi.io" target="_blank" rel="noopener noreferrer">official website</a>; then use the zip utility to extract the package; in the extracted directory <code>assets</code> there is a <code>rootfs.7z</code> file.</p><p><img src="'+e+'" alt="rootfs"></p><p>Then use the <code>7z</code> utility to extract this file and we can get a folder which is rootfs for Twoyi.</p><p><img src="'+t+`" alt="rootfs-file-tree"></p><h2 id="edit-rootfs" tabindex="-1">Edit rootfs <a class="header-anchor" href="#edit-rootfs" aria-hidden="true">#</a></h2><p>Modify the files in the rootfs in a way you are familiar with; such as adding built-in system applications, modifying resource files, modifying fonts, etc.; please note: Please do not delete the binary and library files in the Twoyi rootfs easily, as this may result in a failure to boot.</p><p>PS. Replacement of Launcher is currently not supported, please do not try to replace the custom Launcher.</p><h2 id="adding-rom-ini" tabindex="-1">Adding rom.ini <a class="header-anchor" href="#adding-rom-ini" aria-hidden="true">#</a></h2><p>After modifying the rootfs, it is recommended to add author and ROM description; there is a <code>rom.ini</code> file in the rootfs directory; this file has the following format.</p><div class="language-ini"><pre><code><span class="token key attr-name">author</span><span class="token punctuation">=</span><span class="token value attr-value">\u4F5C\u8005\u540D\u5B57</span>
<span class="token key attr-name">code</span><span class="token punctuation">=</span><span class="token value attr-value">12344 #\u6570\u5B57\u7248\u672C\u53F7</span>
<span class="token key attr-name">version</span><span class="token punctuation">=</span><span class="token value attr-value">1.0.0-first # \u7248\u672C\u540D</span>
<span class="token key attr-name">desc</span><span class="token punctuation">=</span><span class="token value attr-value">\u8FD9\u662F\u4E00\u4E2Ademo ROM</span>
</code></pre></div><h2 id="replace-rom-in-twoyi" tabindex="-1">Replace ROM in Twoyi <a class="header-anchor" href="#replace-rom-in-twoyi" aria-hidden="true">#</a></h2><p>After the modification, use the <code>7z</code> tool to compress this directory into a 7z file; then go to Twoyi, open <code>Settings - Replace ROM</code> and select the ROM you made.</p>`,16),d=[n];function l(c,p,h,f,u,m){return i(),a("div",null,d)}var w=o(r,[["render",l]]);export{_ as __pageData,w as default};
