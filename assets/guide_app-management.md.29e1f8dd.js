import{_ as i,c as e,o as t,a}from"./app.37258d15.js";const u='{"title":"Application Management","description":"","frontmatter":{"sidebarDepth":2},"headers":[{"level":2,"title":"Application Architecture","slug":"application-architecture"},{"level":3,"title":"Container vs. Host Applications","slug":"container-vs-host-applications"},{"level":3,"title":"Application Isolation","slug":"application-isolation"},{"level":2,"title":"Importing Applications","slug":"importing-applications"},{"level":3,"title":"Import Process Overview","slug":"import-process-overview"},{"level":3,"title":"Technical Implementation","slug":"technical-implementation"},{"level":3,"title":"Compatibility Considerations","slug":"compatibility-considerations"},{"level":2,"title":"Installing Applications","slug":"installing-applications"},{"level":3,"title":"Direct Installation","slug":"direct-installation"},{"level":3,"title":"Installation Process","slug":"installation-process"},{"level":2,"title":"Application Runtime","slug":"application-runtime"},{"level":3,"title":"Process Management","slug":"process-management"},{"level":3,"title":"Resource Allocation","slug":"resource-allocation"},{"level":3,"title":"Background Processing","slug":"background-processing"},{"level":2,"title":"Application Data Management","slug":"application-data-management"},{"level":3,"title":"Data Storage","slug":"data-storage"},{"level":3,"title":"Data Isolation","slug":"data-isolation"},{"level":3,"title":"Data Backup and Restore","slug":"data-backup-and-restore"},{"level":2,"title":"Application Updates","slug":"application-updates"},{"level":3,"title":"Update Process","slug":"update-process"},{"level":3,"title":"Technical Implementation","slug":"technical-implementation-1"},{"level":2,"title":"Application Removal","slug":"application-removal"},{"level":3,"title":"Uninstallation Process","slug":"uninstallation-process"},{"level":3,"title":"Data Retention Options","slug":"data-retention-options"},{"level":2,"title":"Application Permissions","slug":"application-permissions"},{"level":3,"title":"Permission Model","slug":"permission-model"},{"level":3,"title":"Permission Management","slug":"permission-management"},{"level":2,"title":"Troubleshooting Application Issues","slug":"troubleshooting-application-issues"},{"level":3,"title":"Common Issues and Solutions","slug":"common-issues-and-solutions"}],"relativePath":"guide/app-management.md","lastUpdated":1746534938332}',n={},o=a('<h1 id="application-management" tabindex="-1">Application Management <a class="header-anchor" href="#application-management" aria-hidden="true">#</a></h1><p>This page explains how Twoyi manages applications within the container environment, including importing, installing, updating, and running applications.</p><h2 id="application-architecture" tabindex="-1">Application Architecture <a class="header-anchor" href="#application-architecture" aria-hidden="true">#</a></h2><h3 id="container-vs-host-applications" tabindex="-1">Container vs. Host Applications <a class="header-anchor" href="#container-vs-host-applications" aria-hidden="true">#</a></h3><p>In Twoyi, there are two distinct application environments:</p><ol><li><strong>Host Environment</strong>: The Android system on your physical device</li><li><strong>Container Environment</strong>: The Android 8.1 system running within Twoyi</li></ol><p>Applications installed in the host environment are not automatically available in the container environment. They must be explicitly imported or installed within the container.</p><h3 id="application-isolation" tabindex="-1">Application Isolation <a class="header-anchor" href="#application-isolation" aria-hidden="true">#</a></h3><p>Applications within the Twoyi container:</p><ul><li>Have their own data directories isolated from the host system</li><li>Run in a separate Android environment with its own permissions</li><li>Cannot directly access data from host applications (unless explicitly shared)</li><li>Have their own process space within the container</li></ul><p>This isolation provides security and prevents conflicts between the host and container environments.</p><h2 id="importing-applications" tabindex="-1">Importing Applications <a class="header-anchor" href="#importing-applications" aria-hidden="true">#</a></h2><h3 id="import-process-overview" tabindex="-1">Import Process Overview <a class="header-anchor" href="#import-process-overview" aria-hidden="true">#</a></h3><p>When you import an application from your host device into the Twoyi container, the following process occurs:</p><ol><li><strong>APK Extraction</strong>: The APK file of the selected application is extracted from the host system</li><li><strong>Compatibility Check</strong>: The APK is analyzed for compatibility with the container environment</li><li><strong>Installation</strong>: The APK is installed within the container using the Package Manager</li><li><strong>Data Initialization</strong>: Initial data directories are created for the application</li></ol><h3 id="technical-implementation" tabindex="-1">Technical Implementation <a class="header-anchor" href="#technical-implementation" aria-hidden="true">#</a></h3><p>The import process involves several technical steps:</p><ol><li><strong>Package Query</strong>: Twoyi queries the host&#39;s PackageManager to get information about installed applications</li><li><strong>APK Location</strong>: The location of the APK file is determined from the package information</li><li><strong>File Copy</strong>: The APK file is copied to a temporary location within Twoyi&#39;s storage</li><li><strong>Package Installation</strong>: The PackageManager within the container installs the APK</li><li><strong>Cleanup</strong>: Temporary files are removed after successful installation</li></ol><h3 id="compatibility-considerations" tabindex="-1">Compatibility Considerations <a class="header-anchor" href="#compatibility-considerations" aria-hidden="true">#</a></h3><p>Not all applications can be successfully imported into Twoyi. Compatibility depends on:</p><ul><li><strong>Architecture Support</strong>: Twoyi only supports 64-bit (arm64-v8a) applications</li><li><strong>API Requirements</strong>: Applications must be compatible with Android 8.1 (API level 27)</li><li><strong>Native Libraries</strong>: Applications with architecture-specific native libraries must support arm64-v8a</li><li><strong>System Dependencies</strong>: Applications with dependencies on specific system components may have issues</li></ul><h2 id="installing-applications" tabindex="-1">Installing Applications <a class="header-anchor" href="#installing-applications" aria-hidden="true">#</a></h2><h3 id="direct-installation" tabindex="-1">Direct Installation <a class="header-anchor" href="#direct-installation" aria-hidden="true">#</a></h3><p>Besides importing from the host system, you can install applications directly within Twoyi:</p><ol><li><strong>APK Files</strong>: Install applications from APK files using the File Manager</li><li><strong>App Stores</strong>: Install applications from alternative app stores within the container</li><li><strong>Web Downloads</strong>: Download and install APKs from websites using the browser</li></ol><h3 id="installation-process" tabindex="-1">Installation Process <a class="header-anchor" href="#installation-process" aria-hidden="true">#</a></h3><p>The direct installation process involves:</p><ol><li><strong>Package Parsing</strong>: The APK file is parsed to extract package information</li><li><strong>Signature Verification</strong>: The APK signature is verified for integrity</li><li><strong>Permission Checking</strong>: Required permissions are checked and requested if necessary</li><li><strong>Installation</strong>: The application is installed to the system</li><li><strong>Post-Installation Setup</strong>: Any necessary post-installation tasks are performed</li></ol><h2 id="application-runtime" tabindex="-1">Application Runtime <a class="header-anchor" href="#application-runtime" aria-hidden="true">#</a></h2><h3 id="process-management" tabindex="-1">Process Management <a class="header-anchor" href="#process-management" aria-hidden="true">#</a></h3><p>When an application runs within Twoyi:</p><ol><li><strong>Process Creation</strong>: The Zygote process forks to create a new process for the application</li><li><strong>Runtime Initialization</strong>: The Android Runtime (ART) is initialized for the application</li><li><strong>Activity Launch</strong>: The application&#39;s main activity is launched</li><li><strong>UI Rendering</strong>: The application&#39;s UI is rendered to the container&#39;s virtual display</li></ol><h3 id="resource-allocation" tabindex="-1">Resource Allocation <a class="header-anchor" href="#resource-allocation" aria-hidden="true">#</a></h3><p>Applications within Twoyi share the resources allocated to the Twoyi container:</p><ul><li><strong>Memory</strong>: Memory is allocated from Twoyi&#39;s memory allocation</li><li><strong>CPU</strong>: Processing time is shared among all running applications</li><li><strong>Storage</strong>: Applications use storage within the container&#39;s file system</li><li><strong>Network</strong>: Network access is provided through the host system&#39;s connection</li></ul><h3 id="background-processing" tabindex="-1">Background Processing <a class="header-anchor" href="#background-processing" aria-hidden="true">#</a></h3><p>Twoyi supports background processing for applications:</p><ul><li><strong>Services</strong>: Applications can run background services</li><li><strong>Broadcast Receivers</strong>: Applications can receive system broadcasts</li><li><strong>Content Providers</strong>: Applications can provide and access content</li><li><strong>Background Tasks</strong>: Applications can schedule and execute background tasks</li></ul><p>However, background processing may be more limited than on a standard Android system due to resource constraints and the containerized environment.</p><h2 id="application-data-management" tabindex="-1">Application Data Management <a class="header-anchor" href="#application-data-management" aria-hidden="true">#</a></h2><h3 id="data-storage" tabindex="-1">Data Storage <a class="header-anchor" href="#data-storage" aria-hidden="true">#</a></h3><p>Applications within Twoyi store their data in the container&#39;s file system:</p><ul><li><strong>Private Data</strong>: Stored in <code>/data/data/[package_name]/</code></li><li><strong>External Storage</strong>: Accessible through <code>/sdcard/</code></li><li><strong>Shared Storage</strong>: Available in standard Android media directories</li></ul><h3 id="data-isolation" tabindex="-1">Data Isolation <a class="header-anchor" href="#data-isolation" aria-hidden="true">#</a></h3><p>Each application&#39;s data is isolated from other applications, following Android&#39;s standard security model:</p><ul><li>Applications cannot access other applications&#39; private data without permissions</li><li>System permissions control access to shared resources</li><li>The container environment provides an additional layer of isolation from the host system</li></ul><h3 id="data-backup-and-restore" tabindex="-1">Data Backup and Restore <a class="header-anchor" href="#data-backup-and-restore" aria-hidden="true">#</a></h3><p>Twoyi provides mechanisms for backing up and restoring application data:</p><ol><li><strong>Application Backup</strong>: Export application data for backup</li><li><strong>Application Restore</strong>: Import previously backed up data</li><li><strong>Container Backup</strong>: Back up the entire container environment</li><li><strong>Container Restore</strong>: Restore the container from a backup</li></ol><h2 id="application-updates" tabindex="-1">Application Updates <a class="header-anchor" href="#application-updates" aria-hidden="true">#</a></h2><h3 id="update-process" tabindex="-1">Update Process <a class="header-anchor" href="#update-process" aria-hidden="true">#</a></h3><p>Applications within Twoyi can be updated through several methods:</p><ol><li><strong>Re-Import</strong>: Re-import the application from the host system</li><li><strong>Direct Update</strong>: Install an updated APK directly within the container</li><li><strong>In-App Updates</strong>: Some applications can update themselves</li></ol><p>The update process preserves application data while replacing the application code.</p><h3 id="technical-implementation-1" tabindex="-1">Technical Implementation <a class="header-anchor" href="#technical-implementation-1" aria-hidden="true">#</a></h3><p>When updating an application:</p><ol><li><strong>Version Comparison</strong>: The new version is compared with the installed version</li><li><strong>Signature Verification</strong>: The signature of the new version is verified against the installed version</li><li><strong>Update Installation</strong>: The new version is installed, replacing the old version</li><li><strong>Data Migration</strong>: Any necessary data migration is performed</li></ol><h2 id="application-removal" tabindex="-1">Application Removal <a class="header-anchor" href="#application-removal" aria-hidden="true">#</a></h2><h3 id="uninstallation-process" tabindex="-1">Uninstallation Process <a class="header-anchor" href="#uninstallation-process" aria-hidden="true">#</a></h3><p>To remove an application from Twoyi:</p><ol><li><strong>User Initiation</strong>: The user initiates uninstallation through the UI</li><li><strong>Package Removal</strong>: The PackageManager removes the application package</li><li><strong>Data Cleanup</strong>: Application data is removed (if selected)</li><li><strong>Resource Reclamation</strong>: Resources used by the application are freed</li></ol><h3 id="data-retention-options" tabindex="-1">Data Retention Options <a class="header-anchor" href="#data-retention-options" aria-hidden="true">#</a></h3><p>When uninstalling an application, users can choose:</p><ul><li><strong>Remove App Only</strong>: Keep application data for potential reinstallation</li><li><strong>Remove App and Data</strong>: Completely remove the application and all its data</li></ul><h2 id="application-permissions" tabindex="-1">Application Permissions <a class="header-anchor" href="#application-permissions" aria-hidden="true">#</a></h2><h3 id="permission-model" tabindex="-1">Permission Model <a class="header-anchor" href="#permission-model" aria-hidden="true">#</a></h3><p>Twoyi implements Android&#39;s standard permission model:</p><ul><li><strong>Install-Time Permissions</strong>: Granted automatically during installation</li><li><strong>Runtime Permissions</strong>: Requested from the user when needed</li><li><strong>Special Permissions</strong>: Require specific user action to grant</li></ul><h3 id="permission-management" tabindex="-1">Permission Management <a class="header-anchor" href="#permission-management" aria-hidden="true">#</a></h3><p>Users can manage application permissions within Twoyi:</p><ol><li>Open the <strong>Settings</strong> app within Twoyi</li><li>Tap <strong>Apps &amp; Notifications</strong></li><li>Select the application</li><li>Tap <strong>Permissions</strong></li><li>Toggle permissions as desired</li></ol><h2 id="troubleshooting-application-issues" tabindex="-1">Troubleshooting Application Issues <a class="header-anchor" href="#troubleshooting-application-issues" aria-hidden="true">#</a></h2><h3 id="common-issues-and-solutions" tabindex="-1">Common Issues and Solutions <a class="header-anchor" href="#common-issues-and-solutions" aria-hidden="true">#</a></h3><table><thead><tr><th>Issue</th><th>Possible Solution</th></tr></thead><tbody><tr><td>Application won&#39;t import</td><td>Ensure the application supports 64-bit architecture</td></tr><tr><td>Application crashes on launch</td><td>Check for missing dependencies or incompatible API usage</td></tr><tr><td>Application can&#39;t access the internet</td><td>Verify network permissions and connectivity</td></tr><tr><td>Application performance issues</td><td>Close other applications to free up resources</td></tr><tr><td>Missing functionality</td><td>Check if the functionality depends on unavailable system components</td></tr></tbody></table><p>For more detailed troubleshooting, refer to the <a href="/guide/troubleshooting.html">Troubleshooting</a> guide.</p>',75),s=[o];function r(l,p,c,d,h,g){return t(),e("div",null,s)}var v=i(n,[["render",r]]);export{u as __pageData,v as default};
